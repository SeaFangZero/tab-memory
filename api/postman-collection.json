{
  "info": {
    "name": "Tab Memory API",
    "description": "Complete API collection for Tab Memory Chrome Extension",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "tab-memory-api-collection"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "session_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('user_id', response.data.user.id);",
                  "        console.log('User registered and token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test-{{$timestamp}}@tabmemory.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('user_id', response.data.user.id);",
                  "        console.log('User logged in and token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@tabmemory.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Ingest Events (Batch)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"events\": [\n    {\n      \"window_id\": 1,\n      \"tab_id\": 123,\n      \"type\": \"open\",\n      \"title\": \"Example Website\",\n      \"url\": \"https://example.com\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    },\n    {\n      \"window_id\": 1,\n      \"tab_id\": 124,\n      \"type\": \"open\",\n      \"title\": \"Google\",\n      \"url\": \"https://google.com\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    },\n    {\n      \"window_id\": 1,\n      \"tab_id\": 123,\n      \"type\": \"activate\",\n      \"title\": \"Example Website\",\n      \"url\": \"https://example.com\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/events/batch",
              "host": ["{{base_url}}"],
              "path": ["events", "batch"]
            }
          },
          "response": []
        },
        {
          "name": "Get Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["events"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Event Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/stats",
              "host": ["{{base_url}}"],
              "path": ["events", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sessions",
      "item": [
        {
          "name": "Get Sessions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.sessions.length > 0) {",
                  "        pm.collectionVariables.set('session_id', response.data.sessions[0].id);",
                  "        console.log('Session ID saved:', response.data.sessions[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/sessions?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["sessions"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Session Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/sessions/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["sessions", "{{session_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Session Tabs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/sessions/{{session_id}}/tabs",
              "host": ["{{base_url}}"],
              "path": ["sessions", "{{session_id}}", "tabs"]
            }
          },
          "response": []
        },
        {
          "name": "Restore Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{session_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/sessions/restore",
              "host": ["{{base_url}}"],
              "path": ["sessions", "restore"]
            }
          },
          "response": []
        },
        {
          "name": "Get Session Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/sessions/stats/overview",
              "host": ["{{base_url}}"],
              "path": ["sessions", "stats", "overview"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/stats",
              "host": ["{{base_url}}"],
              "path": ["users", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"updated-{{$timestamp}}@tabmemory.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Testing Scenarios",
      "item": [
        {
          "name": "Full Flow Test",
          "item": [
            {
              "name": "1. Register Test User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Registration successful', function () {",
                      "    pm.response.to.have.status(201);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.true;",
                      "    pm.expect(response.data.access_token).to.exist;",
                      "    pm.collectionVariables.set('access_token', response.data.access_token);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"flow-test-{{$timestamp}}@tabmemory.com\",\n  \"password\": \"testpassword123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "register"]
                }
              }
            },
            {
              "name": "2. Send Sample Events",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Events ingested successfully', function () {",
                      "    pm.response.to.have.status(202);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.true;",
                      "    pm.expect(response.data.synced_count).to.be.greaterThan(0);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"events\": [\n    {\n      \"window_id\": 1,\n      \"tab_id\": 101,\n      \"type\": \"open\",\n      \"title\": \"GitHub - Tab Memory Project\",\n      \"url\": \"https://github.com/user/tab-memory\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    },\n    {\n      \"window_id\": 1,\n      \"tab_id\": 102,\n      \"type\": \"open\",\n      \"title\": \"Google Docs - Project Planning\",\n      \"url\": \"https://docs.google.com/document/d/abc123\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    },\n    {\n      \"window_id\": 1,\n      \"tab_id\": 101,\n      \"type\": \"activate\",\n      \"title\": \"GitHub - Tab Memory Project\",\n      \"url\": \"https://github.com/user/tab-memory\",\n      \"ts\": \"{{$isoTimestamp}}\"\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{base_url}}/events/batch",
                  "host": ["{{base_url}}"],
                  "path": ["events", "batch"]
                }
              }
            },
            {
              "name": "3. Check User Stats",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('User stats retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.true;",
                      "    pm.expect(response.data.events.total).to.be.greaterThan(0);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/users/stats",
                  "host": ["{{base_url}}"],
                  "path": ["users", "stats"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
